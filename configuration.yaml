# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

http:
  # For extra security set this to only accept connections on localhost if NGINX is on the same machine
  # Uncommenting this will mean that you can only reach Home Assistant using the proxy, not directly via IP from other clients.
  # server_host: 127.0.0.1
  use_x_forwarded_for: true
  # You must set the trusted proxy IP address so that Home Assistant will properly accept connections
  # Set this to your NGINX machine IP, or localhost if hosted on the same machine.
  trusted_proxies: 192.168.10.0/24

homeassistant:
  external_url: https://hass.ff-weingarten.de
  time_zone: Europe/Berlin
  customize: !include customize.yaml
  auth_providers:
  - type: trusted_networks
    trusted_networks:
      - 192.168.2.0/24
      - 192.168.8.0/24
      - 192.168.1.0/24
    trusted_users:
      192.168.2.0/24: 4e7ae05362fd4e90b1bfff074eee4829
      192.168.8.0/24: 4e7ae05362fd4e90b1bfff074eee4829
      192.168.1.0/24: 4e7ae05362fd4e90b1bfff074eee4829
    allow_bypass_login: true
  - type: homeassistant


assist_pipeline:

frontend:
  themes: !include_dir_merge_named themes

zone:
  - name: Home
    latitude: 47.80503389824977
    longitude: 9.642927646636965
    radius: 150
    icon: mdi:home

#logger:
#  default: error
#  logs:
#    xknx: debug

# Text to speech
tts:
  - platform: google_translate

# Mediaplayer
media_player:
  - platform: pjlink
    host: 192.168.11.77
    name: "Epson Feuer pjlink"
    password: !secret epson_pjlink_password
  - platform: pjlink
    host: 192.168.11.47
    name: "Epson Glut pjlink"
    password: !secret epson_pjlink_password

shell_command:
  # telefon_akustik: '{ sleep 1; echo "ECHO 0 ON"; echo "PWF 0 5"; echo "ECHO 0 OFF"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.5.2:49280 || true'
  # tuer_akustik: '{ sleep 1; echo "ECHO 0 ON"; echo "PWF 0 4"; echo "ECHO 0 OFF"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.5.2:49280 || true'
  ela_arbeit: '{ sleep 1; echo "devstatus runmode"; echo "ssrecall 1"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.8.6:49280 || true'
  ela_einsatz: '{ sleep 1; echo "devstatus runmode"; echo "ssrecall 2"; sleep 1;} | curl --raw --max-time 3 telnet://192.168.8.6:49280 || true'
  ela_lehrsaal: '{ sleep 1; echo "devstatus runmode"; echo "ssrecall 3"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.8.6:49280 || true'
  ela_fuehrungsgruppe: '{ sleep 1; echo "devstatus runmode"; echo "ssrecall 4"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.8.6:49280 || true'
  ela_saugstelle: '{ sleep 1; echo "devstatus runmode"; echo "ssrecall 5"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.8.6:49280 || true'
  ela_aus: '{ sleep 1; echo "devstatus runmode"; echo "ssrecall 8"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.8.6:49280 || true'
  ela_playmode_single: '{ sleep 1; echo "event MTX:AudioPlayerGetStatus \"\"\r"; sleep 1;} | curl --raw --max-time 5 telnet://192.168.8.6:49280 || true'
  ela_song_designation: '{ sleep 1; echo "event MTX:AudioPlayerSetCurrentSong \"dirpath=0/0|fileindex=0\"\r"; sleep 1;} | curl --raw --max-time 5 telnet://192.168.8.6:49280 || true'
  ela_song_playback: '{ sleep 1; echo "event MTX:AudioPlayerTransport \"operation=play\"\r"; sleep 1;} | curl --raw --max-time 5 telnet://192.168.8.6:49280 || true'
  ela_song_playback_script: expect /config/scripts/song-playback.exp {{ directory }} {{ file }}
  ela_install_dep: /bin/sh /config/scripts/install-dependency.sh
  # gong_bagatel: '{ sleep 1; echo "ECHO 0 ON"; echo "PWF 0 2"; echo "ECHO 0 OFF"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.5.2:49280 || true'
  # gong_dringend: '{ sleep 1; echo "ECHO 0 ON"; echo "PWF 0 1"; echo "ECHO 0 OFF"; sleep 1;} | curl --raw --max-time 1 telnet://192.168.5.2:49280 || true'

rest_command:
  akku_stoerung:
    url: "https://192.168.1.50:443/rest/external/http/alarm/v2"
    method: POST
    #headers:
    #  authorization: !secret rest_headers_secret
    #  accept: "application/json, text/html"
    #  user-agent: 'Mozilla/5.0 {{ useragent }}'
    payload: '{"type":  "ALARM", "sender": "Homeassistant", "authorization": "w2xucjKvF3q7KNx3Z5hBD9av65xzCzZbfq5AG9zzM384TmAnpHdxHz5NruEMKayB", "data": { "message": ["Netzst√∂rung/USV"]}}'
    content_type:  'application/json; charset=utf-8'
    verify_ssl: false

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
knx: !include knx.yaml
cover: !include covers.yaml
fan: !include fans.yaml
lock: !include lock.yaml
input_select: !include input_select.yaml